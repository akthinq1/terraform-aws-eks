pipeline{
    agent{
        label "AGENT-1"
    }

    environment{
        REGION = "us-east-1"
        ACC_ID = "741005748171"
        PROJECT = "roboshop"
        COMPONENT = "catalogue"
    }

    options{
        timeout(time: 30, unit: 'MINUTES') 
        ansiColor('xterm')
    }

    // parameters{

    // }

    stages {

        // init terraform using aws creds
        stage('init'){
            steps{
                script{
                    withAWS(credentials: 'aws-auth', region: 'us-east-1'){
                         sh """
                            cd 00-vpc
                            terraform init -reconfigure
                        """
                    }

                }
            }
        }

        // terraform plan
        stage('plan'){
            steps{
                script{
                    withAWS(credentials: 'aws-auth', region: 'us-east-1'){
                         sh """
                            cd 00-vpc
                            terraform plan
                        """
                    }

                }
            }
        }

        // terraform apply
        stage('apply'){
            input {
                message "Should we continue?"
                ok "Yes, we should."
                submitter "alice,anil"
            } 

            steps{
                script{
                    withAWS(credentials: 'aws-auth', region: 'us-east-1'){
                         sh """
                            cd 00-vpc
                            terraform apply -auto-approve
                        """
                    }

                }
            }
        }

        stage('destroy'){
            input {
                message "Should we continue?"
                ok "Yes, we should."
                submitter "alice,anil"
            } 

            steps{
                script{
                    withAWS(credentials: 'aws-auth', region: 'us-east-1'){
                         sh """
                            cd 00-vpc
                            terraform destroy -auto-approve
                        """
                    }

                }
            }
        }
    }
}